.TH <DLPLOT> 0 "<29 Sep 2010>" "" "DLPLOT module MAN PAGE"

.SH NAME
<DLPLOT> \- F95 library for printing of arrays

.SH CALL
In any fortran program:
.B use DLPLOT
.RI 
.br

.SH DESCRIPTION

This page  explains how to use  \fB<DLPLOT>\fP module. 
The module contains  routines whose intent is to produce publication
quality plots starting from any fortran array.
The routines are divided in general categories as follows:

.SS SPLOT: 
Simple PLOT. Amount to a fast dumping of the input
array(s). Works with (I,R,C)-point, (R,C)-1Darray, (R,C)-2Darray.
In particular 2D arrays are dumped with a suitable gnuplot script for
easy visualization

.SS PLOT: 
Elaborated (as opposed to Simple) PLOT routine. This
routine accept up to 7 arrays divided as follow: the first array
correponds to the X-axis array. The remaining 6 correponds to the
functions to plot. \fB<plot>\fP creates a distinct couple of plots for
each call: i) an .agr (XmGrace) file, ii) a .png (Graphic File)
file. The routine accepts further options.

.SS PLOT_MOVIE: 
Elaborated PLOT MOVIE routine. This routine
accepts two arrays on input. First array is for X-axis and can be
either 1d or 2d. Second array is for Y-axis and \fBmust\fP be
2-dimensional. \fB<plot_movie>\fP produces a series of .png files
supplemented by bash script named "make_gif.sh" which has to be runned once to produce a .gif movie file with the printed .png files.

.SS PLOT_VF:
PLOT Vector Field routine. This routine accepts 4 arrays as an input. 
The first 2 are 1-dimension arrays and store the X-axis and Y-axis
grids, while the remaining 2 arrays are 2d/3d, with the same sizes of 
the  X,Y arrays for the first 2 dimensions, and store the vector field 
to plot. The routines associates to each point of the VF an arrow and 
attempt to construct a suitable intensity plot. If the 2 arrays are 3d 
then the third dimension is interpreted as a time label and a movie
with the evolving vector field is plotted.

.SS PLOT_3D:
PLOT 3D routine. This routine shall be used to produce 3-dimensional 
plots for 2d-arrays. \fB<plot_3D>\fP accepts on input 3 arrays. The
first two arrays X(:), Y(:) are used to obtain the 2d grid. The third 
array GF(:,:) has the dimensin of X and Y and store the function to
plot. The routine produces on output two kind of plots: i) an
intensity plot (two if C), ii) a surface 3D plot (two if C). Other
optional arguments are used to change some feature of the routine.

.SS PLOT_3D_MOVIE:
PLOT 3D MOVIE routine. Inputs are the same as in \fB<plot_3D>\fP. This 
routine prints out a rotating surface image of the 2d array on input (cf. \fB<plot_3D>\fP).

.SH ROUTINES

\fBSPLOT\fP (PNAME[ch],  X(:)[i/r/c],  Y1(:)[i/r/c],  Y2(:)[r/c,opt],  APPEND[l,opt])

\fBPLOT\fP (PNAME[ch],  X(:)[r],  Y1(:)[r],  Y1LABEL[ch,opt],
Y2(:)[r,opt],  Y2LABEL[ch,opt],  Y3(:)[r,opt],  Y3LABEL[ch,opt],
Y4(:)[r,opt],  Y4LABEL[ch,opt],  Y5(:)[r,opt],  Y5LABEL[ch,opt],
Y6(:)[r,opt],  Y6LABEL[ch,opt],  XLABEL[ch,opt],  YLABEL[ch,opt],
WLP[l,opt],  XMIN[r,opt],  XMAX[r,opt],  YMIN[r,opt],  YMAX[r,opt])

\fBPLOT_MOVIE\fP (PNAME[ch],  X(:)/(:,:)[r],   Y(:,:)[r],
XLABEL[ch,opt],  YLABEL[ch,opt],  WLP[ch,opt],  XMIN[r,opt],
XMAX[r,opt],  YMIN[r,opt],  YMAX[r,opt])

\fBPLOT_VF\fP (PNAME[ch],  X(NX)[r],  Y(NY)[r],  VX(NX,NY)[r],  VY(NX,NY)[r],  XLABEL[ch,opt],  YLABEL[ch,opt])

\fBPLOT_3D\fP (PNAME[ch],  XNAME[ch],  YNAME[ch],  ZNAME[ch],  X(NX)[r],  Y(NY)[r],  GF(NX,NY)[r/c],  IMOVIE[l,opt])

\fBPLOT_3D_movie\fP(PNAME[ch],  XNAME[ch],  YNAME[ch],  ZNAME[ch],  X(NX)[r],  Y(NY)[r],  GF(NX,NY)[r/C])

.SH NOTES ON COMPILATION:
